// Code generated by protoc-gen-echo. DO NOT EDIT.
// versions:
// - protoc-gen-echo v0.0.1
// - protoc  v3.12.4
// source: example/v1/greeter.proto

package v1

import (
	"net/http"

	"github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"
)

func RegisterGreeterHTTPServer(e *echo.Echo) {
	// Middleware
	e.Use(middleware.Logger())
	e.Use(middleware.Recover())
	e.GET("/helloworld/:name/hi/:nice", _Greeter_SayHello0_HTTP_Handler)
	e.POST("/usr/:name/pwd/:passwd", _Greeter_CreateUser0_HTTP_Handler)
	e.PATCH("/usr/:name/pwd/:passwd", _Greeter_UpdateUser0_HTTP_Handler)
	e.DELETE("/usr/:name/pwd/:passwd", _Greeter_DeleteUser0_HTTP_Handler)
	e.GET("/usr/:name/pwd/:passwd", _Greeter_ListUsers0_HTTP_Handler)
}

func _Greeter_SayHello0_HTTP_Handler(c echo.Context) error {
	var payload *HelloRequest
	payload = nil
	var pathParam map[string]string
	pathParam = nil
	pathParam = make(map[string]string)
	pathParam["Name"] = c.Param("name")
	pathParam["Nice"] = c.Param("nice")
	reply, err := GreeterSayHelloBusinessHandler(&pathParam, payload)
	if err != nil {
		return err
	}

	//sm, _ := json.Marshal(payload)
	//fmt.Fprintf(os.Stderr, "payload = %v\n", string(sm))
	//sm1, _ := json.Marshal(pathParam)
	//fmt.Fprintf(os.Stderr, "pathParam = %v\n", string(sm1))
	return c.JSON(http.StatusOK, &reply)
}

func _Greeter_CreateUser0_HTTP_Handler(c echo.Context) error {
	var payload *UserRequest
	payload = nil
	var pathParam map[string]string
	pathParam = nil
	payload = new(UserRequest)
	if err := c.Bind(payload); err != nil {
		return err
	}
	pathParam = make(map[string]string)
	pathParam["Name"] = c.Param("name")
	pathParam["Passwd"] = c.Param("passwd")
	reply, err := GreeterCreateUserBusinessHandler(&pathParam, payload)
	if err != nil {
		return err
	}

	//sm, _ := json.Marshal(payload)
	//fmt.Fprintf(os.Stderr, "payload = %v\n", string(sm))
	//sm1, _ := json.Marshal(pathParam)
	//fmt.Fprintf(os.Stderr, "pathParam = %v\n", string(sm1))
	return c.JSON(http.StatusOK, &reply)
}

func _Greeter_UpdateUser0_HTTP_Handler(c echo.Context) error {
	var payload *UserRequest
	payload = nil
	var pathParam map[string]string
	pathParam = nil
	payload = new(UserRequest)
	if err := c.Bind(payload); err != nil {
		return err
	}
	pathParam = make(map[string]string)
	pathParam["Passwd"] = c.Param("passwd")
	pathParam["Name"] = c.Param("name")
	reply, err := GreeterUpdateUserBusinessHandler(&pathParam, payload)
	if err != nil {
		return err
	}

	//sm, _ := json.Marshal(payload)
	//fmt.Fprintf(os.Stderr, "payload = %v\n", string(sm))
	//sm1, _ := json.Marshal(pathParam)
	//fmt.Fprintf(os.Stderr, "pathParam = %v\n", string(sm1))
	return c.JSON(http.StatusOK, &reply)
}

func _Greeter_DeleteUser0_HTTP_Handler(c echo.Context) error {
	var payload *UserRequest
	payload = nil
	var pathParam map[string]string
	pathParam = nil
	pathParam = make(map[string]string)
	pathParam["Name"] = c.Param("name")
	pathParam["Passwd"] = c.Param("passwd")
	reply, err := GreeterDeleteUserBusinessHandler(&pathParam, payload)
	if err != nil {
		return err
	}

	//sm, _ := json.Marshal(payload)
	//fmt.Fprintf(os.Stderr, "payload = %v\n", string(sm))
	//sm1, _ := json.Marshal(pathParam)
	//fmt.Fprintf(os.Stderr, "pathParam = %v\n", string(sm1))
	return c.JSON(http.StatusOK, &reply)
}

func _Greeter_ListUsers0_HTTP_Handler(c echo.Context) error {
	var payload *UserRequest
	payload = nil
	var pathParam map[string]string
	pathParam = nil
	pathParam = make(map[string]string)
	pathParam["Name"] = c.Param("name")
	pathParam["Passwd"] = c.Param("passwd")
	reply, err := GreeterListUsersBusinessHandler(&pathParam, payload)
	if err != nil {
		return err
	}

	//sm, _ := json.Marshal(payload)
	//fmt.Fprintf(os.Stderr, "payload = %v\n", string(sm))
	//sm1, _ := json.Marshal(pathParam)
	//fmt.Fprintf(os.Stderr, "pathParam = %v\n", string(sm1))
	return c.JSON(http.StatusOK, &reply)
}
