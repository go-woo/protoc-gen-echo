// Code generated by protoc-gen-echo. DO NOT EDIT.
// versions:
// - protoc-gen-echo v0.0.1
// - protoc  v3.14.0
// source: example/v1/greeter.proto

package v1

import (
	"net/http"
	"strings"

	"github.com/labstack/echo/v4"
)

func RegisterGreeterRouter(e *echo.Echo) {
	e.GET("/helloworld/:name/hi/:nice", _Greeter_SayHello0_HTTP_Handler)
	e.POST("/usr/:phone", _Greeter_CreateUser0_HTTP_Handler)
	e.PATCH("/usr/:phone", _Greeter_UpdateUser0_HTTP_Handler)
	e.DELETE("/usr/:phone", _Greeter_DeleteUser0_HTTP_Handler)
	e.GET("/usr/:phone", _Greeter_ListUsers0_HTTP_Handler)
}

func _Greeter_SayHello0_HTTP_Handler(c echo.Context) error {
	var req *HelloRequest = new(HelloRequest)
	if c.QueryParam(strings.ToLower("Name")) != "" {
		req.Name = c.QueryParam(strings.ToLower("Name"))
	}
	if c.Param(strings.ToLower("Name")) != "" {
		req.Name = c.Param(strings.ToLower("Name"))
	}
	if c.QueryParam(strings.ToLower("Nice")) != "" {
		req.Nice = c.QueryParam(strings.ToLower("Nice"))
	}
	if c.Param(strings.ToLower("Nice")) != "" {
		req.Nice = c.Param(strings.ToLower("Nice"))
	}

	reply, err := GreeterSayHelloBusinessHandler(req)
	if err != nil {
		return err
	}

	return c.JSON(http.StatusOK, &reply)
}

func _Greeter_CreateUser0_HTTP_Handler(c echo.Context) error {
	var req *UserRequest = new(UserRequest)
	if err := c.Bind(req); err != nil {
		return err
	}
	if c.QueryParam(strings.ToLower("Phone")) != "" {
		req.Phone = c.QueryParam(strings.ToLower("Phone"))
	}
	if c.Param(strings.ToLower("Phone")) != "" {
		req.Phone = c.Param(strings.ToLower("Phone"))
	}
	if c.QueryParam(strings.ToLower("Email")) != "" {
		req.Email = c.QueryParam(strings.ToLower("Email"))
	}
	if c.Param(strings.ToLower("Email")) != "" {
		req.Email = c.Param(strings.ToLower("Email"))
	}

	reply, err := GreeterCreateUserBusinessHandler(req)
	if err != nil {
		return err
	}

	return c.JSON(http.StatusOK, &reply)
}

func _Greeter_UpdateUser0_HTTP_Handler(c echo.Context) error {
	var req *UserRequest = new(UserRequest)
	if err := c.Bind(req); err != nil {
		return err
	}
	if c.QueryParam(strings.ToLower("Phone")) != "" {
		req.Phone = c.QueryParam(strings.ToLower("Phone"))
	}
	if c.Param(strings.ToLower("Phone")) != "" {
		req.Phone = c.Param(strings.ToLower("Phone"))
	}
	if c.QueryParam(strings.ToLower("Email")) != "" {
		req.Email = c.QueryParam(strings.ToLower("Email"))
	}
	if c.Param(strings.ToLower("Email")) != "" {
		req.Email = c.Param(strings.ToLower("Email"))
	}

	reply, err := GreeterUpdateUserBusinessHandler(req)
	if err != nil {
		return err
	}

	return c.JSON(http.StatusOK, &reply)
}

func _Greeter_DeleteUser0_HTTP_Handler(c echo.Context) error {
	var req *UserRequest = new(UserRequest)
	if c.QueryParam(strings.ToLower("Phone")) != "" {
		req.Phone = c.QueryParam(strings.ToLower("Phone"))
	}
	if c.Param(strings.ToLower("Phone")) != "" {
		req.Phone = c.Param(strings.ToLower("Phone"))
	}
	if c.QueryParam(strings.ToLower("Email")) != "" {
		req.Email = c.QueryParam(strings.ToLower("Email"))
	}
	if c.Param(strings.ToLower("Email")) != "" {
		req.Email = c.Param(strings.ToLower("Email"))
	}

	reply, err := GreeterDeleteUserBusinessHandler(req)
	if err != nil {
		return err
	}

	return c.JSON(http.StatusOK, &reply)
}

func _Greeter_ListUsers0_HTTP_Handler(c echo.Context) error {
	var req *UserRequest = new(UserRequest)
	if c.QueryParam(strings.ToLower("Phone")) != "" {
		req.Phone = c.QueryParam(strings.ToLower("Phone"))
	}
	if c.Param(strings.ToLower("Phone")) != "" {
		req.Phone = c.Param(strings.ToLower("Phone"))
	}
	if c.QueryParam(strings.ToLower("Email")) != "" {
		req.Email = c.QueryParam(strings.ToLower("Email"))
	}
	if c.Param(strings.ToLower("Email")) != "" {
		req.Email = c.Param(strings.ToLower("Email"))
	}

	reply, err := GreeterListUsersBusinessHandler(req)
	if err != nil {
		return err
	}

	return c.JSON(http.StatusOK, &reply)
}
